# Use the official TensorFlow Docker image as the base
FROM tensorflow/tensorflow:2.12.0-gpu

# Add the Universe repository
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository universe

# Install dependencies for compiling OpenCV and FFmpeg
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libgtk-3-dev \
    libpvx-dev \
    libatlas-base-dev \
    gfortran \
    wget \
    unzip \
    yasm \
    libmp3lame-dev \
    libopus-dev 

# Download and compile FFmpeg
RUN git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg && \
    cd ffmpeg && \
    ./configure --enable-shared --disable-static --prefix=/usr/local --enable-libx264 --enable-libx265 --enable-libvpx --enable-libmp3lame --enable-libopus --enable-protocol=libsrt  --enable-gpl --pkgconfigdir=/usr/local/lib/pkgconfig && \
    make -j$(nproc) && \
    make install && \
    ldconfig
# Download and compile OpenCV with CUDA and cuDNN support
RUN git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D WITH_CUDA=ON \
          -D CUDA_ARCH_BIN=7.2 \
          -D WITH_CUDNN=ON \
          -D OPENCV_DNN_CUDA=ON \
          -D WITH_FFMPEG=ON \
          -D FFMPEG_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules \
          .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Set environment variables
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH \
    PATH=/usr/local/bin:$PATH \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

# Install additional Python packages
RUN pip install tqdm tensorflow-hub mediapy requests

# Set the working directory
WORKDIR /workspace
